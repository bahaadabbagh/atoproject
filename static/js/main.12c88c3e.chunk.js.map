{"version":3,"sources":["images/heroImage.jpeg","images/frequency.svg","images/bot.png","images/browser.svg","images/incognito.svg","images/Map.svg","images/companies.jpg","components/HeroPart.jsx","components/Navbar.jsx","components/Highlights.jsx","components/Companies.jsx","components/CallToAction.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroPart","Row","Col","md","className","Badge","variant","Button","src","heroImage","width","alt","NavbarPage","state","isOpen","toggleCollapse","setState","Component","Highlights","Card","Img","bot","Title","Text","map","browser","incognito","frequency","Companies","logos","CallToAction","hint","containerClassName","append","outline","color","App","Navbar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.12c88c3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heroImage.229fc030.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/frequency.f3d3958c.svg\";","module.exports = __webpack_public_path__ + \"static/media/bot.e8be9a2c.png\";","module.exports = __webpack_public_path__ + \"static/media/browser.981fd482.svg\";","module.exports = __webpack_public_path__ + \"static/media/incognito.dd08f4f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/Map.2c538ca0.svg\";","module.exports = __webpack_public_path__ + \"static/media/companies.3f1ca647.jpg\";","import React from \"react\";\r\nimport { Badge, Col, Row, Button } from \"react-bootstrap\";\r\nimport heroImage from \"../images/heroImage.jpeg\";\r\n\r\nexport default function HeroPart() {\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col md=\"5\" className=\"heroText\">\r\n          {\" \"}\r\n          <h1>\r\n            Stop Account Takeovers <br />\r\n            Check Their \r\n\r\n            {\" \"} \r\n             <Badge variant=\"primary\">\r\n            FirngprintJS\r\n             </Badge>\r\n          </h1>\r\n          <h3>Today, Account Takeover Attacks Can Affect Any Organization With a Login Proces</h3>\r\n          {/* <h2>Apply the industries leading fingerprint technology against account takeover</h2> */}\r\n          {/* <h2>99.5 accuracy and the most comprehensive fingerprint security</h2> */}\r\n          <div className=\"CTA\">\r\n            <Button variant=\"danger\">10 day free trial</Button>\r\n            {/* <h3 className=\"betweenCTA\">Or</h3> */}\r\n            {/* <Button variant=\"primary\">Try Demo {\" \"}</Button> */}\r\n          </div>\r\n        </Col>\r\n        <Col md=\"6\">\r\n          <img src={heroImage} width=\"100%\" alt=\"\"></img>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBCollapse} from \"mdbreact\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\nclass NavbarPage extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n  \r\n  toggleCollapse = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  }\r\n  render() {\r\n  return (\r\n    // <Router>\r\n    <MDBNavbar sticky=\"top\" color=\"indigo\" dark expand=\"md\" width=\"100%\">\r\n      <MDBNavbarBrand className=\"logo\" >FirngprintJS Pro</MDBNavbarBrand>\r\n      <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n      <MDBNavbarNav left >\r\n        {/* <MDBNavItem ><MDBNavLink to=\"#\" >Demo</MDBNavLink></MDBNavItem>\r\n        <MDBNavItem ><MDBNavLink to=\"#\" >Pricing</MDBNavLink></MDBNavItem>\r\n        <MDBNavItem ><MDBNavLink to=\"#\" >Open-Source</MDBNavLink></MDBNavItem>\r\n        <MDBNavItem ><MDBNavLink to=\"#\" >Docs</MDBNavLink></MDBNavItem>\r\n        <MDBNavItem  className=\"startTrial\"><MDBNavLink to=\"#\" >Start Trial</MDBNavLink></MDBNavItem> */}\r\n      </MDBNavbarNav>\r\n    </MDBCollapse>\r\n    </MDBNavbar>\r\n    //  </Router>\r\n  );\r\n}\r\n}\r\n\r\nexport default NavbarPage;","import React from \"react\";\r\nimport { Card, Col, Row } from \"react-bootstrap\";\r\nimport frequency from \"../images/frequency.svg\";\r\nimport bot from \"../images/bot.png\";\r\nimport browser from \"../images/browser.svg\";\r\nimport incognito from \"../images/incognito.svg\";\r\nimport map from \"../images/Map.svg\";\r\n\r\nexport default function Highlights() {\r\n  return (\r\n    <div className=\"containera\">\r\n      <Row>\r\n        {\" \"}\r\n        <h2 className=\"highlightsHero\">\r\n          <strong>\r\n            {\" \"}\r\n            5 Ways FingerprintJs Will Defend You Against Account Takeover\r\n          </strong>\r\n        </h2>\r\n      </Row>\r\n      <Row>\r\n        <Col md=\"3\" width=\"10rem\">\r\n          <Card.Img variant=\"top\" src={bot} width=\"18rem\" />\r\n          <Card.Title> BOT DETECTION</Card.Title>\r\n          <Card.Text width=\"100%\">\r\n            Detection of the most sophisticated bots to prevent credential stuffing\r\n            with a bot probablity factor for each user\r\n            {/* We Protect your site from bots trying to breach your data */}\r\n          </Card.Text>\r\n        </Col>\r\n        <Col md=\"1\"></Col>\r\n        <Col md=\"3\" width=\"10rem\">\r\n        <Card.Img variant=\"top\" src={map} />\r\n          <Card.Title> GEOLOCATION</Card.Title>\r\n          <Card.Text>\r\n            Don't allow attackers to hide under fake IPs.\r\n            {/* Attackers Try to Use Kocal And Trusted IPs. */}Determine where your\r\n            users are located by checking their FingerprintJs!\r\n          </Card.Text>\r\n        </Col>\r\n        <Col md=\"1\"></Col>\r\n        <Col md=\"3\" width=\"100%\">\r\n          <Card.Img variant=\"top\" src={browser} />\r\n          <Card.Title> BROWSER FINGERPRINTING</Card.Title>\r\n          <Card.Text>\r\n            Leverage of the most advanced browser Fingerprinting in the market by undoubtedly identifying your users everytime\r\n          </Card.Text>\r\n        </Col>\r\n        </Row>\r\n            <Row>\r\n        <Col md=\"2\"></Col>\r\n        <Col md=\"3\" width=\"100%\">\r\n          <Card.Img variant=\"top\" src={incognito} />\r\n          <Card.Title> INCOGNITO MODE DETECTION</Card.Title>\r\n          <Card.Text>\r\n          Incognito mode browsing cannot hide their identity with our advanced browser fingerprinting. \r\n          </Card.Text>\r\n          </Col>\r\n          <Col md=\"1\"></Col>\r\n        <Col md=\"3\" width=\"100%\">\r\n        <Card.Img variant=\"top\" src={frequency} />\r\n          <Card.Title> FREQUENCY DETECTION</Card.Title>\r\n          <Card.Text>\r\n          Flag irregular frequency of requests from your website that arise during an attack by analysing against time of day,\r\n          location and many other factors\r\n          </Card.Text>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Row} from 'react-bootstrap';\r\nimport logos from \"../images/companies.jpg\";\r\n\r\nexport default function Companies() {\r\n    return (\r\n        <div>\r\n            <div className=\"companiesText\">\r\n        <h1>Work Safer With FingerprintJS</h1>\r\n        <h6>Companies Leveraging Our Security</h6>\r\n      </div>\r\n      <Row>\r\n        <img src={logos} width=\"100%\" alt=\"logos\"></img>\r\n      </Row>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {MDBInputGroup, MDBBtn} from 'mdbreact';\r\nexport default function CallToAction() {\r\n    return (\r\n        <div className=\"callToAction\">\r\n           {/* <h2>We give you measurable results that has the transparency and adaptability to meet your needs </h2>  */}\r\n           <h2>Don't Be Another Victim Of Account Takeover//We present the solution </h2>\r\n           <h2>Security is Essential to Any Organzation, We present The Easy Solution </h2>\r\n           {/* <h2>It's very Rare When Necessary Things Are This Easy To Get</h2> */}\r\n           {/* <h2>Secure, Easy, And Necessary. Try It Today</h2> */}\r\n           <MDBInputGroup\r\n          hint=\"Your Work Email\"\r\n          containerClassName=\"mb-3\"\r\n          append={\r\n            <MDBBtn outline color=\"primary\" className=\"m-0 px-3 py-2 z-depth-0\">\r\n              Start Trial Today\r\n            </MDBBtn>\r\n          }\r\n        />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\n// import { Container } from \"react-bootstrap\";\nimport HeroPart from \"./components/HeroPart\";\nimport Navbar from \"./components/Navbar\";\nimport Highlights from \"./components/Highlights\";\nimport Companies from \"./components/Companies\";\nimport CallToAction from \"./components/CallToAction\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      {/* <Container className=\"App\"> */}\n        <HeroPart />\n        <Highlights/>\n        <CallToAction/>\n      {/* </Container> */}\n      <Companies/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import 'mdbreact/dist/css/mdb-free.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}